(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     42352,        942]
NotebookOptionsPosition[     40614,        905]
NotebookOutlinePosition[     41009,        921]
CellTagsIndexPosition[     40966,        918]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ACM 11: Project 3 - Topic 1", "Title",
 CellChangeTimes->{{3.79968615051512*^9, 
  3.799686156898491*^9}},ExpressionUUID->"9c8bceb8-c063-4a80-8715-\
99e93c96ffca"],

Cell[TextData[{
 "In this notebook we will investigate a fundamental question in random graph \
theory: if a graph is generated by some random process, what is the \
probability that it is connected? We will use \
Erd\[ODoubleAcute]s-R\[EAcute]nyi Graphs, graphs with ",
 StyleBox["n",
  FontSlant->"Italic"],
 " vertices and an edge probability ",
 StyleBox["p",
  FontSlant->"Italic"],
 " for all possible edges, as our random graphs and check their connectivity \
across various n and p."
}], "Text",
 CellChangeTimes->{{3.799686164266882*^9, 3.799686197984776*^9}, {
  3.79968651310074*^9, 3.799686542353827*^9}, {3.7996865992339354`*^9, 
  3.799686678949832*^9}, {3.7996882196795807`*^9, 
  3.799688243565198*^9}},ExpressionUUID->"db06461f-6a4c-4270-b3c8-\
ce1675399729"],

Cell[CellGroupData[{

Cell["Part a", "Section",
 CellChangeTimes->{{3.799686712740603*^9, 
  3.799686718451633*^9}},ExpressionUUID->"6b761445-dc04-4999-9e71-\
bdede49ac52b"],

Cell[TextData[{
 "We will first define a makeGraph function that takes in ",
 StyleBox["n",
  FontSlant->"Italic"],
 " number of vertices and ",
 StyleBox["p ",
  FontSlant->"Italic"],
 "edge probability and generate a random Erd\[ODoubleAcute]s-R\[EAcute]nyi \
graph. This function returns the adjacency matrix of the randomly produced \
graph."
}], "Text",
 CellChangeTimes->{{3.799686724428144*^9, 3.799686808072878*^9}, {
  3.799688228488534*^9, 
  3.7996882409727983`*^9}},ExpressionUUID->"4087d9e1-dc26-4e0d-af06-\
49290415bd55"],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeGraph", "[", 
   RowBox[{"n_", ",", " ", "p_"}], "]"}], " ", ":=", " ", 
  RowBox[{"AdjacencyMatrix", "[", 
   RowBox[{"RandomGraph", "[", 
    RowBox[{"BernoulliGraphDistribution", "[", 
     RowBox[{"n", ",", " ", "p"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.799675741923957*^9, 3.799675759206539*^9}, {
   3.7996760753610697`*^9, 3.79967607899341*^9}, {3.799676120056288*^9, 
   3.799676140997875*^9}, {3.7996761949181232`*^9, 3.799676247681864*^9}, {
   3.799676282084876*^9, 3.79967628332769*^9}, {3.799676383477812*^9, 
   3.799676406261187*^9}, {3.799683732116859*^9, 3.799683894467517*^9}, {
   3.799683991098125*^9, 3.799684037829261*^9}, {3.7996866837525187`*^9, 
   3.799686716316742*^9}, 
   3.799686757434679*^9},ExpressionUUID->"e51079bf-1131-4b25-b5d1-\
3480cb0f2af6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part b", "Section",
 CellChangeTimes->{{3.799686821312454*^9, 
  3.799686821952283*^9}},ExpressionUUID->"1b4c8a4e-bc2e-463c-ae60-\
d43abdbba30c"],

Cell[TextData[{
 "Next, we define a connectedProb function that takes in ",
 StyleBox["n",
  FontSlant->"Italic"],
 " number of vertices, ",
 StyleBox["p ",
  FontSlant->"Italic"],
 "edge probability, and ",
 StyleBox["m",
  FontSlant->"Italic"],
 " number of graphs to generate. This function will generate ",
 StyleBox["m ",
  FontSlant->"Italic"],
 "random graphs with ",
 StyleBox["n",
  FontSlant->"Italic"],
 " vertices and ",
 StyleBox["p ",
  FontSlant->"Italic"],
 "edge probability and returns the fraction of graphs which are connected in \
an effort to estimate the probability that a randomly generated graph with \
the given parameters in connected."
}], "Text",
 CellChangeTimes->{{3.7996868301523857`*^9, 
  3.799686957210824*^9}},ExpressionUUID->"47100629-11be-4609-8e1b-\
029b828f2de9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"connectedProb", "[", 
   RowBox[{"n_", ",", " ", "p_", ",", " ", "m_"}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Local", " ", "variables"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "count", " ", "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"count", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", " ", "[", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "If", " ", "the", " ", "randomly", " ", "generated", " ", "graph", 
         " ", "is", " ", "connected"}], ",", " ", 
        RowBox[{"add", " ", "it", " ", "to", " ", "our", " ", "numerator"}]}],
        " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"count", " ", "+=", " ", 
        RowBox[{"Boole", "[", 
         RowBox[{"ConnectedGraphQ", "[", 
          RowBox[{"AdjacencyGraph", "[", 
           RowBox[{"makeGraph", "[", 
            RowBox[{"n", ",", " ", "p"}], "]"}], "]"}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", "m", "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"count", " ", "/", " ", "m"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.799633706274374*^9, 3.7996337070421743`*^9}, {
  3.799636714471942*^9, 3.799636714924225*^9}, {3.799676256011759*^9, 
  3.7996762652564373`*^9}, {3.799676452220606*^9, 3.799676470145151*^9}, {
  3.799683052705682*^9, 3.799683087596723*^9}, {3.799684052840775*^9, 
  3.799684091356019*^9}, {3.799684122237124*^9, 3.799684138258232*^9}, {
  3.799684193387274*^9, 3.799684242001177*^9}, {3.799684370298285*^9, 
  3.7996844092424297`*^9}, {3.799685045995123*^9, 3.7996850577952023`*^9}, {
  3.799685095847735*^9, 3.799685105701201*^9}, {3.7996851970656157`*^9, 
  3.799685216997221*^9}, {3.799686105736405*^9, 3.799686106229146*^9}, {
  3.799686966401614*^9, 
  3.799686981162458*^9}},ExpressionUUID->"4321959a-8ec5-401f-8351-\
c414b88faa08"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part c", "Section",
 CellChangeTimes->{{3.7996869940895977`*^9, 
  3.799686994713263*^9}},ExpressionUUID->"12a97b3b-c801-4586-b900-\
673ab4c0fcd2"],

Cell[TextData[{
 "Finally, we define various ",
 StyleBox["n",
  FontSlant->"Italic"],
 " and ",
 StyleBox["p ",
  FontSlant->"Italic"],
 "and check the probability that the graph is connected. If it is always \
connected (connectedProb = 1) we will denote it with a blue dot and if it is \
never connected \n(connectedProb = 0) we will denote it with a red dot. In \
order to account for the randomness of the graphs we will allow small error \
for the connectedProb. The following cell takes ~30sec to run."
}], "Text",
 CellChangeTimes->{{3.799687002761922*^9, 3.799687012936857*^9}, {
  3.7996870831671133`*^9, 3.799687119331442*^9}, {3.7996876349355593`*^9, 
  3.799687791511971*^9}, {3.799688807752699*^9, 3.79968881368004*^9}, {
  3.7996894716877213`*^9, 3.799689473918838*^9}, {3.799689511404119*^9, 
  3.799689516515794*^9}},ExpressionUUID->"acb94ac1-e990-4a0f-96d1-\
2b6835a5562c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ns", " ", "=", " ", 
   RowBox[{"PowerRange", "[", 
    RowBox[{"50", ",", " ", "2000", ",", " ", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ps", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", " ", ".11", ",", " ", ".003"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"points", " ", "=", " ", 
   RowBox[{"Tuples", "[", 
    RowBox[{"{", 
     RowBox[{"ns", ",", " ", "ps"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeroProb", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"connectedProb", "[", 
         RowBox[{
          RowBox[{"points", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", " ", 
          RowBox[{"points", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", " ", "2"}], "]"}], "]"}], ",", " ", "10"}], 
         "]"}], "\[LessEqual]", ".1"}], ",", " ", 
       RowBox[{"points", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
       RowBox[{"Unevaluated", "@", 
        RowBox[{"Sequence", "[", "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oneProb", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"connectedProb", "[", 
         RowBox[{
          RowBox[{"points", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", " ", 
          RowBox[{"points", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", " ", "2"}], "]"}], "]"}], ",", " ", "10"}], 
         "]"}], "\[GreaterEqual]", ".9"}], ",", " ", 
       RowBox[{"points", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
       RowBox[{"Unevaluated", "@", 
        RowBox[{"Sequence", "[", "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.799633618639352*^9, 3.7996336351164913`*^9}, {
   3.799634042104189*^9, 3.799634105633226*^9}, {3.799634661312145*^9, 
   3.799634720852148*^9}, {3.799634804954809*^9, 3.7996348206885557`*^9}, 
   3.799635179237954*^9, 3.7996352422344227`*^9, {3.799635811300914*^9, 
   3.799635844064494*^9}, {3.799636691661632*^9, 3.799636692349424*^9}, 
   3.7996377167754507`*^9, {3.799638277673778*^9, 3.7996383664392014`*^9}, {
   3.7996765480488777`*^9, 3.799676553163764*^9}, {3.79967659654151*^9, 
   3.799676637154277*^9}, {3.799676669361308*^9, 3.7996767395265007`*^9}, {
   3.799677041828145*^9, 3.7996770500919743`*^9}, {3.79967759322222*^9, 
   3.799677617012512*^9}, {3.7996776728830547`*^9, 3.7996776830396214`*^9}, {
   3.799677718666884*^9, 3.7996777258367*^9}, {3.7996815914783573`*^9, 
   3.7996816649715843`*^9}, {3.799681748432839*^9, 3.7996817607757998`*^9}, {
   3.7996817964321423`*^9, 3.799681859252322*^9}, {3.799682021680382*^9, 
   3.799682032797387*^9}, {3.799682161301011*^9, 3.799682308259789*^9}, {
   3.799682444405808*^9, 3.799682451405465*^9}, {3.799682489884644*^9, 
   3.7996825039471292`*^9}, {3.79968280508849*^9, 3.799682807393721*^9}, {
   3.7996829386146383`*^9, 3.799682967562667*^9}, {3.79968426016851*^9, 
   3.799684313683895*^9}, {3.7996847678534107`*^9, 3.799684768633996*^9}, {
   3.799684822522427*^9, 3.79968482300772*^9}, {3.799685032979292*^9, 
   3.799685091454382*^9}, {3.7996851834917393`*^9, 3.799685221746916*^9}, {
   3.7996854277474613`*^9, 3.7996854336553793`*^9}, {3.7996857580680037`*^9, 
   3.7996857820717154`*^9}, {3.79968582832378*^9, 3.799685881534473*^9}, {
   3.799685957429963*^9, 3.799685958378767*^9}, {3.7996860303151093`*^9, 
   3.799686045013475*^9}, {3.79968838760283*^9, 3.799688421016238*^9}, {
   3.799688469903028*^9, 3.799688483909985*^9}, {3.799688518916997*^9, 
   3.79968853407541*^9}, {3.799688591165082*^9, 3.7996885912806873`*^9}, {
   3.7996886814493923`*^9, 3.799688735228375*^9}, {3.7996888323710413`*^9, 
   3.799688849550885*^9}, {3.799688894622394*^9, 3.799688895380866*^9}, {
   3.799688989340651*^9, 3.799688998447891*^9}, {3.7996891811891813`*^9, 
   3.799689181346827*^9}, {3.7996892372600107`*^9, 3.7996892379130077`*^9}, {
   3.7996893033619537`*^9, 3.7996893137094316`*^9}, {3.799689414836688*^9, 
   3.7996895076860113`*^9}, {3.799689546080217*^9, 3.799689546620549*^9}},
 CellLabel->
  "In[767]:=",ExpressionUUID->"35da4736-ddf7-4585-9adf-e7ca5a75af55"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"zeroProb", ",", " ", "oneProb"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", "Blue"}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<connectedProb=0\>\"", ",", " ", "\"\<connectedProb=1\>\""}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"Plot", "[", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"E", ",", " ", "x"}], "]"}], "/", "x"}], ")"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "5", ",", " ", "5000"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Purple", "}"}]}], ",", 
     RowBox[{"PlotRange", "->", "All"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<p*\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", " ", "p2", ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Connectivity of Random Graph for \
\!\(\*StyleBox[\"p\",FontSlant->\"Italic\"]\) vs \
\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)\>\"", ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)\>\"", ",", " ", 
      "\"\<\!\(\*StyleBox[\"p\",FontSlant->\"Italic\"]\)\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdxUsogwEAB/BZqDmstpA9LtaSxlYoRrZsRtrKGJvISlgrj9AOajhZW1tT
pJZHE1qspYiG7eYgO2wiia1oa24b8gq1xvf/Dr9+pYMTGgOVQqFwCbhfUiZu
UKdlgmd/Pb63jEpxhDmkwiU/HjVm7VV24Jnc41584Lvsw1bthhm3pTh2rHCU
L+DgoX4RxwqjcTzp4Dxh5UX2A8vz6j5xLVfObiQuML1wsMsWVmHz+St5g01A
VRNfee/y8TYnou8knpflDGBX7HoL3/JXPTiYFGYw791OvpMRujXEFl7zJha7
2SGcrkmQm01LD5hl2CUvCrgS2NDak8SnxrE3/HjjJJes/dG7iJ1fSib+FX7z
cXWgqQJPhcIGLGBIjdgaX9F2E494l3WYMTe+j62JafKzUJVIS0xdj4oxjVYs
wfSUX4YV9lgL9omP2rHohKvDs1nGMP4HytnSKQ==
  "],
 CellLabel->
  "In[822]:=",ExpressionUUID->"72bc5306-9089-469f-a2a0-d3b32d210d65"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAwB2IQDQGeDgwowNPhV13WnpLJGfao/Ao43+a+f+/0vCY0
+Q44f4dc6+vAHX1o6ifB+dL6d1XYGqei6Z8B59889z348dLZaObNg/N9zDsd
E54uQDN/EZyv3S4GNGIxmn1L4Xyu64sLbLmWo9m/As5/pWbIsUZmFZp7VsP5
J8v2zZfSX4vmvnVwfgjQ8UcUNqC5bxOUH4kW3pFo4R2JFt6RaOEdiRbekWjh
HYkW3pFo4R2JFt6RaOEdiRbekWjhHYkW3pFo4Z2J5r9MNP9lovkvE81/mWj+
y0TzXyaa/zLR/FeJZn8lmv2VaPZXotlfiWZ/J5p5nWjmdaKZNxNN/Uy4egA7
OumP
          "]]}, {
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         PointBox[CompressedData["
1:eJxdkk1IlFEUQIdZhLgKChclURhtWki0cGM0ghGBEloL3Yng4omki4huiyAj
8mK1KCQvA/Yjg/9DZT+jRrhoo4sWbUQiQkSE2rURa9Po+7rDdz4YhsMM97vv
nXOiu7+9J5vJZB6UP3vf8bmU+3nqTNVs7eL5/7z+ZefKZmEp4c7c1c1C/vPx
V87Nw33bf6deOzf+uPzw6bU3zmf3n3nn0/dryiMrXPdt93bvx7fOR+u/nzxw
553zobvLqy8uvHeuXhsfOFf9wTm7P7DCf8rTrj8pOf/+2tp9sGPBOX2+ztzG
rcPFixsVTp83JOd56Rz3H3eO+xac434TznGfSef4/mnn+L4Z55Ubn54dqZ9z
Lh2796utVHRO33/ItTRoU9dWhdM+AnwE+AjwEeAjwEeAjwAfAT4CfAT4CPAR
4CPAhyT7jDjH+aPO8f9553h/Y87xvp47p/0K/Ar8CvwK/Ar8CvwK/Ar8CvwK
/Ar8CvwK/Ar8CvwK/Ar8CvwK/Ar8CvwK/Ar8CvxqMm/IOd7PI+d43sfO6R4U
PSh6UPSg6EHRg6IHRQ+KHhQ9KHpQ9KDoQdGDogdFD4oeFD0oelD0oOhB0YOi
B0UPih4UPSh6UPSg6EHRgyXzbjrH8w3i9yHndC+GXgy9GHox9GLoxdCLoRdD
L4ZeDL0YejH0YujF0IuhF0Mvhl4MvRh6MfRi6MXQi6EXQy+GXgy9GHox9GLo
xdCLeS//AApNjcg=
          "]]}}, {{
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]]}, {}, {}, {}}, {{
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]]}, {}, {}, {}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.5, 0, 0.5]], 
          LineBox[CompressedData["
1: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
nr/UMEOA/wHzLbrR
           "]]}, 
         Annotation[#, "Charting`Private`Tag$82372#1"]& ]}}, {}}}, {
    ImageSize -> Large, PlotLabel -> FormBox[
       StyleBox[
       "\"Connectivity of Random Graph for \
\\!\\(\\*StyleBox[\\\"p\\\",FontSlant->\\\"Italic\\\"]\\) vs \
\\!\\(\\*StyleBox[\\\"n\\\",FontSlant->\\\"Italic\\\"]\\)\"", FontSize -> 18, 
        StripOnInput -> False], TraditionalForm], AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*StyleBox[\\\"n\\\",FontSlant->\\\"Italic\\\"]\\)\"", 
        TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*StyleBox[\\\"p\\\",FontSlant->\\\"Italic\\\"]\\)\"", 
        TraditionalForm]}, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {17.708333333333336`, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{17.708333333333336`, 1600.}, {0, 0.108}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"connectedProb=0\"", "\"connectedProb=1\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "False"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"p*\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7996899549857903`*^9, {3.7996899956082172`*^9, 3.799690017047742*^9}},
 CellLabel->
  "Out[824]=",ExpressionUUID->"cd8892d6-1563-4116-9f49-7583a0757f72"]
}, Open  ]],

Cell[TextData[{
 "From this, we have highlighted the \[OpenCurlyDoubleQuote]phase transition\
\[CloseCurlyDoubleQuote] from unconnected to connected regions for various ",
 StyleBox["n",
  FontSlant->"Italic"],
 " and ",
 StyleBox["p",
  FontSlant->"Italic"],
 ". We clearly see as our ",
 StyleBox["n",
  FontSlant->"Italic"],
 " increases the phase transition gets smaller and smaller. We see that we \
can define a curve ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["p", "*"], "=", 
    FractionBox[
     RowBox[{"ln", " ", "n"}], "n"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "2569353c-ce19-4ae9-824d-a6456963e2e2"],
 " that divides our connected and unconnected regions. This agrees with the \
theoretical critical values that have been established with these kind of \
random graphs. Thus, we can conclude that the probability that a random Erd\
\[ODoubleAcute]s-R\[EAcute]nyi graph is connected is 1 when the edge \
probabilities for the graph are larger than ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["p", "*"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "b5e31efb-fd35-4f25-82eb-d2f3ac03249e"],
 " and 0 when they are less than ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["p", "*"], TraditionalForm]],ExpressionUUID->
  "0a8ccb52-32d8-42e3-8c98-07d32d03ee76"],
 " for large n.\n"
}], "Text",
 CellChangeTimes->{{3.799687799096566*^9, 3.7996878298708477`*^9}, {
  3.799687882733639*^9, 3.7996880253532267`*^9}, {3.7996880687825108`*^9, 
  3.7996882154238453`*^9}, {3.799688248893224*^9, 
  3.7996883778318367`*^9}},ExpressionUUID->"aa7dab52-e5bc-42b0-b729-\
9577096ceda1"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1439, 802},
WindowMargins->{{-11, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e33abe0b-a93c-4172-8b2d-c87d3d0dbefa"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 169, 3, 98, "Title",ExpressionUUID->"9c8bceb8-c063-4a80-8715-99e93c96ffca"],
Cell[752, 27, 776, 17, 58, "Text",ExpressionUUID->"db06461f-6a4c-4270-b3c8-ce1675399729"],
Cell[CellGroupData[{
Cell[1553, 48, 151, 3, 67, "Section",ExpressionUUID->"6b761445-dc04-4999-9e71-bdede49ac52b"],
Cell[1707, 53, 535, 14, 58, "Text",ExpressionUUID->"4087d9e1-dc26-4e0d-af06-49290415bd55"],
Cell[2245, 69, 839, 16, 30, "Input",ExpressionUUID->"e51079bf-1131-4b25-b5d1-3480cb0f2af6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3121, 90, 151, 3, 67, "Section",ExpressionUUID->"1b4c8a4e-bc2e-463c-ae60-d43abdbba30c"],
Cell[3275, 95, 804, 25, 58, "Text",ExpressionUUID->"47100629-11be-4609-8e1b-029b828f2de9"],
Cell[4082, 122, 2182, 45, 325, "Input",ExpressionUUID->"4321959a-8ec5-401f-8351-c414b88faa08"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6301, 172, 153, 3, 67, "Section",ExpressionUUID->"12a97b3b-c801-4586-b900-673ab4c0fcd2"],
Cell[6457, 177, 891, 18, 58, "Text",ExpressionUUID->"acb94ac1-e990-4a0f-96d1-2b6835a5562c"],
Cell[7351, 197, 4650, 98, 115, "Input",ExpressionUUID->"35da4736-ddf7-4585-9adf-e7ca5a75af55"],
Cell[CellGroupData[{
Cell[12026, 299, 2396, 59, 73, "Input",ExpressionUUID->"72bc5306-9089-469f-a2a0-d3b32d210d65"],
Cell[14425, 360, 24484, 496, 410, "Output",ExpressionUUID->"cd8892d6-1563-4116-9f49-7583a0757f72"]
}, Open  ]],
Cell[38924, 859, 1662, 42, 109, "Text",ExpressionUUID->"aa7dab52-e5bc-42b0-b729-9577096ceda1"]
}, Open  ]]
}, Open  ]]
}
]
*)

